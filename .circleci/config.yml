# iOS CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/ios-migrating-from-1-2/ for more details
#
version: 2
jobs:
  build-and-test:

    # Specify the Xcode version to use
    macos:
        xcode: "9.2.0"
    shell: /bin/bash --login -eo pipefail

    # dependencies:
    #    pre:
    #     - echo "2.3.1" > .ruby-version

    environment:
        FL_OUTPUT_DIR: output
        FASTLANE_LANE: test
    steps:
        - checkout
    #     - restore_cache:
    #       key: 1-gems-{{ checksum "Gemfile.lock" }}
    #     - run: bundle check || bundle install --path vendor/bundle
    #     - save_cache:
    #         key: 1-gems-{{ checksum "Gemfile.lock" }}
    #         paths:
    #             - vendor/bundle
    #     - run:
    #             name: Set Ruby Version
    #             command:  echo "ruby-2.4" > ~/.ruby-version
    #     - run:
    #         name: pre-start simulator
    #         command: xcrun instruments -w "iPad Air (11.2)" || true
    #     - run:
    #         name: Install CocoaPods
    #         command: |
    #             curl https://cocoapods-specs.circleci.com/fetch-cocoapods-repo-from-s3.sh | bash -s cf
    #             chruby $(cat .ruby-version | cut -d '-' -f 2) && sudo gem install cocoapods && pod install
    #   # Build the app and run tests
    #     - run:
    #         name: Build and run tests
    #         command: bundle exec fastlane $FASTLANE_LANE
    #         environment:
    #             SCAN_DEVICE: iPhone 6
    #             SCAN_SCHEME: PeerDemo
        - run:  
            name: Fetch CocoaPods Specs
            command: |
                curl https://cocoapods-specs.circleci.com/fetch-cocoapods-repo-from-s3.sh | bash -s cf
        - run:
            name: Install CocoaPods
            command: pod install --verbose

        - run:
            name: Build and run tests
            command: fastlane scan
            environment:
                SCAN_DEVICE: iPhone 8
                SCAN_SCHEME: PeerDemo
      # Collect XML test results data to show in the UI,
      # and save the same XML files under test-results folder
      # in the Artifacts tab
        - store_test_results:
            path: test_output/report.xml
        - store_artifacts:
            path: /tmp/test-results
            destination: scan-test-results
        - store_artifacts:
            path: ~/Library/Logs/scan
            destination: scan-logs

workflows:
    version: 2
    build-test:
        jobs:
        - build-and-test